$(document).ready(function(){

  if($.browser.msie && $.browser.version < 8){
    $("button[name=_method]").each(function(){
      // IEではbuttonのvalueを取得するのは異常に面倒くさい
      // ダメなのは以下
      // jquery $(this).val(), $(this).attr('value')
      // javascript element.getAttribute('value')
      // というわけでattributesのgetNamedItem経由でnodeValueを取得した
      //
      var btn = document.getElementsByName($(this).attr('name'))[0];
      $(this).text( btn.attributes.getNamedItem('value').nodeValue );
    });
  }

  $(".hide").hide();

  $("#message").fadeOut(3000, function(){$(this).remove();});

  $("form.validate").submit(function(){
    var valid = true;
    $('span.invalid').remove();
    $('input.required, textarea.required').each(function(){
      $(this).removeClass('invalid');
      if ( $.trim($(this).val()) == "") {
        $(this).addClass('invalid');
        $(this).after("<span class='invalid'>#{msgShow MsgWarnFieldsRequired}</span>");
        valid = false;
      }
    });
    return valid;
  });

  $(".watermark").watermark();
  $(".google")
  .focus(function(){
    $(this).removeClass("google");
  })
  .focusout(function(){
    if (this.value=='')
      $(this).addClass("google");
  })
  .each(function(){
    if (this.value!=''){
      $(this).removeClass("google");
    }
  });

  $(".login-options").attr("title","#{msgShow MsgLogin}").dialog({
    autoOpen: true,
    width: 520,
    modal: true,
    open: function () {
      document.getElementById('loginAccountId').focus();
    }
  });
  $(".login_button").click(function(){
    $(this).addClass("press");
    return true;
  });

  $.ajax({
    type: 'GET',
    url: '@?{simpleSidePane}',
    dataType: 'html',
    success: function(data) {
      var fs = $('<fieldset></fieldset>'),
          ld = $('<legend/>'),
          sp = $(data);
      if ('#{show mu}'=='Nothing') {
        $('#sidenavi').append(fs.append(ld.text('#{Settings.sidePaneTitle}')).append(sp));
      }else{
        var a = $('<a/>').attr({href: '@{sidePaneView}'}).text('#{Settings.sidePaneTitle}');
        $('#sidenavi').append(fs.append(ld.append(a)).append(sp));
      }
    },
    error: function(msg, status) {
      if ('#{show mu}'!='Nothing') {
        var anc = $('<a/>').attr({href:'@?{sidePaneNew}'}).text('#{msgShow (MsgEditing Settings.sidePaneTitle)}');
        $('#sidenavi').append(anc);
      }
    }
  });


  $.getJSON('@{RecentChangesR}', function(json){
      var fs = $('<fieldset><legend>#{msgShow MsgRecentChanges}</legend></fieldset>'),
          ul = $('<ul/>');
      $.each(json.entries, function(i, item){
            var url = item.uri,
                ttl = item.title;
            var li = $('<li/>');
            var anc = $('<a/>').attr({href:url}).text(ttl);
            li.append(anc);
            // item.new is illegal symbol for IE.
            if (item['new']=='True') {
              var img = $('<img/>').attr({src: '@{StaticR img_new_png}'});
              li.append(img);
            }
            ul.append(li);
      });
      $('#recent-changes').append(fs.append(ul));
  });

  $("#file_selector").hide().attr("title", "#{msgShow MsgGallery}").dialog({
    autoOpen: false,
    width: 680,
    modal: true
  });

  var pos;


  $("#go_upload")
  .attr('disabled','disabled')
  .click(function(){
    $("#fields")
    .upload($("#upload_form").attr('action'),
         function(res) {
           if (res['readyState'] == 'complete') {
             var file = $(res).find('file'),
                 uri = file.find('uri').text(),
                 name = file.find('name').text(),
                 ext = file.find('ext').text(),
                 size = file.find('size').text(),
                 g = makeImageLink(uri, name, ext, size, pos);
             g.prependTo("#selectable_images");
             $("#upload_error").hide();
           } else {
             $("#upload_error").show();
           }
           $('#upload_file').val('');
           $('#upload_file').change();
         }, 'xml');
    return false;
  });
  $('#upload_file').change(function(){
    if($(this).val() != null && $(this).val() != "") {
      $('#go_upload').removeAttr('disabled');
    }else{
      $('#go_upload').attr('disabled','disabled');
    }
  });

  $("#file-select-button").click(function(){
    var obj = $("#content")[0];
    if (obj) {
      obj.focus();
      if (jQuery.browser.msie) {
        pos = document.selection.createRange();
      } else {
        pos = obj.selectionStart;
      }
    }
    $("#file_selector").dialog('open');
    $("#selectable_images .image-gallery").remove();
    $.getJSON($("#file-select-button").closest("form").attr("action"),
      function(data){
        $.each(data.files,
          function(i,item){
            var g = makeImageLink(item.uri, item.name, item.ext, item.size, pos);
            g.appendTo("#selectable_images");
        });
      });
    return false;
  });

  $("#trashbox")
  .css({opacity: 0.2})
  .draggable({
    containment: '#trash-area',
    opacity: 0.6
  })
  .droppable({
    accept: '.image-gallery',
    over: function(e, ui) {
      $(this).css({opacity: 1.0});
    },
    out: function(e, ui) {
      $(this).css({opacity: 0.2});
    },
    drop: function(e, ui) {
      $(ui.helper).remove();
      $.post($(ui.draggable).find('img').attr('uri'),
             {'_method': 'delete'},
             function(res){
               $(ui.draggable).fadeOut('normal', function() {$(this).remove();});
               $("#trashbox").css({opacity: 0.2});
             }, 'xml');
    }
  });

});

function thumbnailUri(ext) {
  extLow = ext.toLowerCase();
  if (extLow=='.gif'||extLow=='.jpg'||extLow=='.jpeg'||extLow=='.png') {
    return '';
  }else{
    return "@{StaticR img_file_icon_png}";
  }
}

function makeImageLink(uri,name,ext,size,pos){
  var uncache = jQuery.browser.msie ? "?uncache="+(new Date).getTime() : "",
      thumbnail = thumbnailUri(ext),
      imgP = !thumbnail,
      iconsrc = thumbnail || uri,
      img = $("<img/>").attr({src:iconsrc+uncache}),
      anc = $("<a/>").attr({href:"#"}),
      li = $("<li/>").addClass("image-gallery"),
      img_markdown = (imgP ? "!" : "") + "["+name+"]("+uri+")",
      obj = $("#content")[0];

  img.bind('load', function(){
    var ow = $(this).width(),
        oh = $(this).height(),
        nh = 36,
        nw = ow*36/oh,
        altstr = imgP ? name + ' [' + oh + 'x' + ow + ']' : name + ' [' + addFigure(size) + ']';
    $(this).attr({height: nh, width: nw, uri: uri, alt: altstr, fname: name})
           .bubbleup({tooltip:true, scale: 64})
           .closest('li').css({width: nw, height: nh});
  });

  li.draggable({
    helper: 'clone',
    revert: false,
    containment: '#file_selector',
    opacity: 0.6
  });

  if (pos!=null) {
    anc.bind('click', function() {
      $("#file_selector").dialog('close');
      obj.focus();
      if (jQuery.browser.msie) {
        pos.text = img_markdown;
        pos.select();
      }else{
        var s = obj.value;
        var np = pos + img_markdown.length;
        obj.value = s.substr(0,pos) + img_markdown + s.substr(pos);
        obj.setSelectionRange(np,np);
      }
      return false;
    });
  }
  return li.append(anc.append(img));
}

function addFigure(str) {
  function f(n) {
    var div = Math.floor(n/1000),
        mod = n%1000;
    if (div==0) {
      return mod;
    }else{
      return f(div) + "," + mod;
    }
  }
  return f(parseInt(str));
}
